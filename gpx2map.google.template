[% # Template for Google API Map Mash-Up
%]
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xmlns:v="urn:schemas-microsoft-com:vml">

 <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>[% title %]</title>
    <style type="text/css"></style>
    <script src="http://maps.google.com/maps?file=api&amp;v=2[% apikey %]"
            type="text/javascript"></script>
    <script type="text/javascript">
    //<![CDATA[

    function load() {
      if (GBrowserIsCompatible()) {
        var map = new GMap2(document.getElementById("mapContainer"));

        // Map center; 2nd last option one zoom level, last is type
        map.setCenter(new GLatLng([% points.0.lat %], 
                                  [% points.0.lon %] ), 12, G_HYBRID_MAP );

        // Setup
        map.addControl(new GLargeMapControl());     // Direction, Zoom
        map.addControl(new GMapTypeControl());      // Map/Sat/Hyb Switch
        map.addControl(new GOverviewMapControl());  // Mini-Map 

       // Base Icon for all icons, as taken from API Documentation
        var baseIcon = new GIcon();
        baseIcon.shadow = "http://www.google.com/mapfiles/shadow50.png";
        baseIcon.iconSize = new GSize(20, 34);
        baseIcon.shadowSize = new GSize(37, 34);
        baseIcon.iconAnchor = new GPoint(9, 34);
        baseIcon.infoWindowAnchor = new GPoint(9, 2);
        baseIcon.infoShadowAnchor = new GPoint(18, 25);
        baseIcon.image =  "http://www.google.com/mapfiles/marker.png";
        baseicon_opt = { icon:baseIcon };

        // Special Icon for start point: Letter "S"
        var starticon = new GIcon(baseIcon);
        starticon.image =  "http://www.google.com/mapfiles/markerS.png";
        starticon_opt = { icon:starticon };

        // Special Icon for end point: Letter "E"
        var endicon = new GIcon(baseIcon);
        endicon.image =  "http://www.google.com/mapfiles/markerE.png";
        endicon_opt = { icon:endicon };

        // Track points
        [% FOREACH point = points %]
          var point = new GLatLng([% point.lat %], 
                                   [% point.lon %]);
         var marker[% loop.index %] = new GMarker(point
          [%- IF loop.first %]
          [%- # First track point: "S" %]
          , starticon_opt
          [%- ELSIF loop.last %]
          [%- # Last track point: "E" %]
          , endicon_opt
          [%- ELSE %]
          [%- # Normal Icon %]
          , baseicon_opt
          [%- END %]
          );
          map.addOverlay( marker[% loop.index %] );
          GEvent.addListener(marker[% loop.index %] , "click", function() {
               marker[% loop.index %].openInfoWindowHtml("[% point.dist  %]"); }  );     
        [% END %]


     //  Track line
    // Could by much improved by using encoded Polyline, see http://www.google.com/apis/maps/documentation/reference.html#GPolyline
    var polylinePoints = [];  // Create an array to contain the line points
    [% FOREACH point = line %]
     myPoint = new GLatLng([% point.lat %], 
                            [% point.lon %]);
    polylinePoints.push (myPoint);   [% # Add next point to line array %]
    [% END %]
    // Add line to map, points, color, width in pixel, transparency
    map.addOverlay(new GPolyline(polylinePoints, "#B04000",3,0.7) );
      }
    }

    function set_size() {
         // Update size of map element to fill browser window
      if (document.getElementById) {   // When element is available then reposition
         // Update width to window height
         document.getElementById("mapContainer").style.width = (window.innerWidth - 20) + "px";
         // Update height to window height
         var height = window.innerHeight;   // Start with window height
	 height = height - document.getElementById("mapContainer").offsetTop;  // substract start of window element
         document.getElementById("mapContainer").style.height = (height - 10) + "px";   // Update element
      }
      // else: Use MS-Only method for older IE versions (not implemented)
    }

    // Register set_size to be executed every time the browser window size is changed
    if ( window.addEventListener ) {   // when modern listener method is supported
       window.addEventListener ("resize", set_size, false);
    } else if (window.captureEvents ) {  // otherwise try older version
       window.captureEvents(Event.RESIZE);
       window.onresize = set_size;
    } else if (window.attachEvent) {      // at last try MSIE special version
       object.attachEvent("onresize", set_size);
    }
    //]]>
    </script>
  </head>

  <body onload="load(); set_size();" onunload="GUnload()">

    <h1>[% title %]</h1>

    <table style="width:100%;border-width:0px;">
    <tr>
    <td style="text-align:left;">Distance is [% distance %]</td>
    <td style="text-align:left;">Click on markers for distance from start and height</td>
    <td style="text-align:right;">created with <a href="http://sethdepot.org/gpx2map/">gpx2map</a></td>
    </tr>
    </table>

    <div id="mapContainer" style="position: absolute; left:10px; width:800px; height:500px;"></div>


  </body>
</html>
