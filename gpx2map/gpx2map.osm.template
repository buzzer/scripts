[%- # Template for OpenStreetMaps API Map Mash-Up -%]
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
 <head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <title>[% title %]</title>
    <style type="text/css">
         html, body {height: 100%}   <!-- Required for strict Doctype, otherwise map is zero size -->
    </style>
    <!-- bring in the OpenLayers and OpenStreetMap javascript libraries -->
    <script type="text/javascript" src="http://www.openlayers.org/api/OpenLayers.js"></script>
    <script type="text/javascript" src="http://www.openstreetmap.org/openlayers/OpenStreetMap.js"></script>

   <script type="text/javascript">
   //<![CDATA[

    function load() {
      // *** Map Itself
      var map = new OpenLayers.Map ("map", {
       controls:[
        new OpenLayers.Control.Navigation(),
        new OpenLayers.Control.PanZoomBar(),
        new OpenLayers.Control.Permalink(),
        new OpenLayers.Control.OverviewMap() ],
       numZoomLevels: 19,
       units: 'm',
       projection: new OpenLayers.Projection("EPSG:900913"),
       displayProjection: new OpenLayers.Projection("EPSG:4326")
      } );
 
      // Define the map layer
      [%- # Other defined layers are OpenLayers.Layer.OSM.Mapnik, OpenLayers.Layer.OSM.Maplint and OpenLayers.Layer.OSM.CycleMap %]
      layerTilesAtHome = new OpenLayers.Layer.OSM.Osmarender("Osmarender");
      map.addLayer(layerTilesAtHome);
 
      // Define the markers layer
      layerMarkers = new OpenLayers.Layer.Markers("Markers");
      map.addLayer(layerMarkers);
      if( ! map.getCenter() ){
          var lonLat = new OpenLayers.LonLat([% points.0.lon %], [% points.0.lat %]).transform(new OpenLayers.Projection("EPSG:4326"), map.getProjectionObject());
          map.setCenter (lonLat, 12);   // 2. Parameter: Initial zoom
      }

     // *** Track points
     var size = new OpenLayers.Size(20,34);
     var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
     var iconS = new OpenLayers.Icon('http://www.google.com/mapfiles/markerS.png',size,offset);
     var iconE = new OpenLayers.Icon('http://www.google.com/mapfiles/markerE.png',size,offset);
     var icon = new OpenLayers.Icon('http://www.google.com/mapfiles/marker.png',size,offset);

     [%- FOREACH point = points %]
     var point = new  OpenLayers.LonLat([% point.lon %], [% point.lat %]).transform(
                      new OpenLayers.Projection("EPSG:4326"), map.getProjectionObject());
     [%- IF loop.first %]
     [%- # First track point: "S" %]
     layerMarkers.addMarker(new OpenLayers.Marker(point,iconS));
     [%- ELSIF loop.last %]
     [%- # Last track point: "E" %]
     layerMarkers.addMarker(new OpenLayers.Marker(point,iconE));
     [%- ELSE %]
     [%- # Normal Icon %]
     layerMarkers.addMarker(new OpenLayers.Marker(point,icon.clone()));
     [%- END %]
     // TODO: Add description:"[% point.dist %]"
     [% END %]

    // *** Map Line
    var lineLayer = new OpenLayers.Layer.Vector('Line Layer');
    var points = new Array(
    [%- FOREACH point = line %]
     new OpenLayers.Geometry.Point([% point.lon %], [% point.lat %])
     [%- IF NOT loop.last -%],
     [%- END -%]
    [%- END %]
    );

    var line = new OpenLayers.Geometry.LineString(points); 
    var defaultProj = new OpenLayers.Projection('EPSG:4326');
    line = line.transform(defaultProj, map.getProjectionObject());

    lineFeature = new OpenLayers.Feature.Vector(line, null, {
     strokeColor: '#F02000', 
     strokeOpacity: 0.7,
     strokeWidth: 3
    });
    lineLayer.addFeatures([lineFeature]);
    map.addLayer(lineLayer);  // Add to map
  }

  function set_size() {
       // Update size of map element to fill browser window
    if (document.getElementById) {   // When element is available then reposition
       // Update width to window height
       document.getElementById("map").style.width = (window.innerWidth - 30) + "px";
       // Update height to window height
       var height = window.innerHeight;   // Start with window height
       height = height - document.getElementById("map").offsetTop;  // substract start of window element
       document.getElementById("map").style.height = (height - 10) + "px";   // Update element
    }
    // else: Use MS-Only method for older IE versions (not implemented)
  }

  // Register set_size to be executed every time the browser window size is changed
  if ( window.addEventListener ) {   // when modern listener method is supported
     window.addEventListener ("resize", set_size, false);
  } else if (window.captureEvents ) {  // otherwise try older version
     window.captureEvents(Event.RESIZE);
     window.onresize = set_size;
  } else if (window.attachEvent) {      // at last try MSIE special version
     object.attachEvent("onresize", set_size);
  }
  //]]>
  </script>
</head>

<body onload="load(); set_size();">

  <h1><a name="toplocation">[% title %]</a></h1>

  <table style="width:100%;border-width:0px;">
  <tr>
  <td style="text-align:left;">Distance is [% distance %]</td>
  <td style="text-align:left;"><a href="#addinfos">Additional Information</a></td>
  <td style="text-align:right;">created with <a href="http://sethdepot.org/gpx2map/">gpx2map</a></td>
  </tr>
  </table>

  <div id="map" style="width:100%; height:80%"></div>

    <h2><a name="addinfos">Additional Information</a></h2>

    <div><a href="#toplocation">Back to top</a></div>


    <ul>
      <li>Hover over markers for distance from start and height</li>
      [%- IF height_enable %]
      [%- # Only print when height display is enabled %]
      <li>Accumulated Ascend: [% height_ascend %]</li>
      <li>Accumulated Descend: [% height_descend %]</li>
      [%- END %]
    </ul>

  [%- IF height_enable %]
  [%- # Only print when height display is enabled %]
  <!-- Height Display -->
  <div  style="text-align:center">
     <img alt="Height Profile" src="[% height_file %]" />
  </div>
  [%- END %]

</body>
</html>
