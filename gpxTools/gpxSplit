#!/usr/bin/perl
#This work by Sebastian Rockel (sebastianrockel@gmail.com) is licensed under a 
#Creative Commons Attribution-Noncommercial-Share Alike 3.0 Germany License.
#"http://creativecommons.org/licenses/by-nc-sa/3.0/de/"
#
# Original from
# http://blog.dinotools.de/2008/11/24/einzelne-tracks-aus-gpx-dateien-extrahieren
# modified by 2010-06-06 Sebastian Rockel

use warnings;
use strict;
use File::Basename;

my $EXITOK=0;

# Script paths
my $GPSBABEL='/opt/local/bin/gpsbabel';
my $GPXSEGMENTS=$ENV{'HOME'}.'/bin/gpxTools/gpxSegments_new';

die "Missing gpx file argument\n" unless $ARGV[0] =~ /.+\.gpx/;

my $file = $ARGV[0];
my @segments=0;
my @segNames=();
my $tmp_file = "$file.tmp";
$tmp_file =~ s/ /_/g;
my $outPath=(join "/", dirname($file), basename($file,".gpx"))."_";
$outPath =~ s/ /_/g;

#print "IN: $file\n";
#print "TMP: $tmp_file\n";
#print "OUT: $outPath\n";

print "Setting track names ... ";
system("$GPSBABEL -t -r -w -i gpx,gpxver=1.1 -f '$file' -x nuketypes,waypoints -x transform,trk=rte,del -o gpx,gpxver=1.1 -F '$tmp_file'");
print "done\n";

print "Getting track names ... ";

open(SEGMENTS, "$GPXSEGMENTS $file|");
my $segments = <SEGMENTS>;
chomp $segments;
close (SEGMENTS);

my @segNames = split ("\t", $segments);

print "done\n";

my $count = 1;
my $num = @segNames;

print "Segments found: $num\n";
print "Extracting segments ... \n";
foreach(@segNames) {
  my $newfn = $_;
  $newfn =~ s/\W/_/g; # Correct file name to not cause trouble
  system("$GPSBABEL -t -r -w -i gpx,gpxver=1.1 -f '$tmp_file' -x track,name='$_' -o gpx,gpxver=1.1 -F '$outPath''$newfn'.gpx");
  print "Segment $count from $num: $_\n";
  $count++;
}
system("rm -f $tmp_file");
print "done\n";

exit $EXITOK;
