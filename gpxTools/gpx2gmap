#!/usr/bin/perl
#This work by Sebastian Rockel (sebastianrockel@gmail.com) is licensed under a 
#Creative Commons Attribution-Noncommercial-Share Alike 3.0 Germany License.
#"http://creativecommons.org/licenses/by-nc-sa/3.0/de/"
#
# Convert a GPX formated file to a Google Map html link
# Sebastian Rockel
#
# V0.1 | 2009-03-25 
# -----------------
# Tracks and Waypoints are ignored.
# Several Routes in 1 file are recognized.
# Limit overall amount of route points to Google allowd (today: 25)
#
use warnings;
use strict;

# Geo::Gpx is a Perl module to create and parse GPX files.
# For more information for use see 'perldoc Geo::Gpx'
use Geo::Gpx;

# Google limit for route points
my $maxPt = 24;

# Google Url start
my $gmapUrl="http://maps.google.de/maps?f=d&saddr=";

# Put your browser command here
my $BROWSER='open';

# Open GPX file
my $fpath = shift ||  die "You have to specify a '.gpx' file as argument!";

open (my $fh, '<', $fpath) or die "Cannot open file $fpath: $!";

# Parse GPX from open file
my $gpx = Geo::Gpx->new( input => $fh );

my $iter = 0;
# Check for any routes in gpx structure
if ($gpx->routes()) {
  # Get an iterator that visits all the route points in a "Geo::Gpx".
  $iter = $gpx->iterate_routepoints();
} else {
  # Get track point iterator
  $iter = $gpx->iterate_trackpoints();
}

my $count = -1;

while ( (my $pt = $iter->()) && ($maxPt > $count) ){
    $count++;
    if (0 == $count){
        $gmapUrl.=join(',', $pt->{lat}, $pt->{lon})."&daddr=";
    } elsif (1 == $count){
        $gmapUrl.=join(',', $pt->{lat}, $pt->{lon});
    } else {
        $gmapUrl.="+to:".join(',', $pt->{lat}, $pt->{lon});
    }
}
# Keep for debugging
#print $gmapUrl, "\n";

# Open Browser
system ("$BROWSER \"$gmapUrl\"");

exit 0;
